steps:
  - script: |
      curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter && \
      chmod +x ./cc-test-reporter && \
      ./cc-test-reporter -d after-coverage -t coverage.py
#  - script: |
#      curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter && \
#      chmod +x ./cc-test-reporter && \
#      python -c '
#      from xml.etree import ElementTree as et
#      from pathlib import Path
#      import subprocess
#      from_folder = Path("$(Build.StagingDirectory)")
#      for counter, coverage_file in enumerate(from_folder.glob("*/coverage.xml")):
#          key = coverage_file.parent.name[9:]
#          print(f"{counter}) {coverage_file}")
#          try:
#              cmd = ["$(System.DefaultWorkingDirectory)/cc-test-reporter", "format-coverage",
#                     str(coverage_file),
#                     "-d", "-t", "coverage.py",
#                     "-o", f"$(Build.StagingDirectory)/code-climate.{key}.json"]
#              print(f"\t{cmd}")
#              log = subprocess.check_output(cmd, stderr=subprocess.STDOUT, universal_newlines=True)
#              code = 0
#          except subprocess.CalledProcessError as exception:
#              log, code = exception.output, exception.returncode
#          finally:
#              print(code, log, '\n', sep='\n')' && \
#      ./cc-test-reporter sum-coverage -d --output - \
#          --parts $(ls -1 $(Build.StagingDirectory)/code-climate.*.json | wc -l) \
#          $(Build.StagingDirectory)/code-climate.*.json | \
#      ./cc-test-reporter -d -r 4cdceb4fb4bd47851f327963b9b225f8cbafad7a8cc25f1373c6da8b2ef371c2 \
#          upload-coverage --input -
#    displayName: publish code climate
#    condition: succeededOrFailed()


#CC_TEST_REPORTER_ID
